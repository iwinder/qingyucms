// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// - protoc-gen-go-http v2.4.1
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_api.proto

package v1

import (
	context "context"
	http "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(context.Context)
var _ = binding.EncodeURL

const _ = http.SupportPackageIsVersion1

const OperationQyAdminApiCreateQyAdminApi = "/api.qycms_bff.admin.v1.QyAdminApi/CreateQyAdminApi"
const OperationQyAdminApiDeleteQyAdminApi = "/api.qycms_bff.admin.v1.QyAdminApi/DeleteQyAdminApi"
const OperationQyAdminApiDeleteQyAdminApis = "/api.qycms_bff.admin.v1.QyAdminApi/DeleteQyAdminApis"
const OperationQyAdminApiGetQyAdminApi = "/api.qycms_bff.admin.v1.QyAdminApi/GetQyAdminApi"
const OperationQyAdminApiListQyAdminApi = "/api.qycms_bff.admin.v1.QyAdminApi/ListQyAdminApi"
const OperationQyAdminApiUpdateQyAdminApi = "/api.qycms_bff.admin.v1.QyAdminApi/UpdateQyAdminApi"

type QyAdminApiHTTPServer interface {
	CreateQyAdminApi(context.Context, *CreateQyAdminApiRequest) (*CreateQyAdminApiReply, error)
	DeleteQyAdminApi(context.Context, *DeleteQyAdminApiRequest) (*DeleteQyAdminApiReply, error)
	DeleteQyAdminApis(context.Context, *DeleteQyAdminApisRequest) (*DeleteQyAdminApisReply, error)
	GetQyAdminApi(context.Context, *GetQyAdminApiRequest) (*GetQyAdminApiReply, error)
	ListQyAdminApi(context.Context, *ListQyAdminApiRequest) (*ListQyAdminApiReply, error)
	UpdateQyAdminApi(context.Context, *UpdateQyAdminApiRequest) (*UpdateQyAdminApiReply, error)
}

func RegisterQyAdminApiHTTPServer(s *http.Server, srv QyAdminApiHTTPServer) {
	r := s.Route("/")
	r.POST("/api/admin/v1/sysapi", _QyAdminApi_CreateQyAdminApi0_HTTP_Handler(srv))
	r.PUT("/api/admin/v1/sysapi/{uid}", _QyAdminApi_UpdateQyAdminApi0_HTTP_Handler(srv))
	r.DELETE("/api/admin/v1/sysapi/{uid}", _QyAdminApi_DeleteQyAdminApi0_HTTP_Handler(srv))
	r.DELETE("/api/admin/v1/sysapi", _QyAdminApi_DeleteQyAdminApis0_HTTP_Handler(srv))
	r.GET("/api/admin/v1/sysapi/{uid}", _QyAdminApi_GetQyAdminApi0_HTTP_Handler(srv))
	r.GET("/api/admin/v1/sysapi", _QyAdminApi_ListQyAdminApi0_HTTP_Handler(srv))
}

func _QyAdminApi_CreateQyAdminApi0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateQyAdminApiRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiCreateQyAdminApi)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.CreateQyAdminApi(ctx, req.(*CreateQyAdminApiRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateQyAdminApiReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminApi_UpdateQyAdminApi0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in UpdateQyAdminApiRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiUpdateQyAdminApi)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.UpdateQyAdminApi(ctx, req.(*UpdateQyAdminApiRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*UpdateQyAdminApiReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminApi_DeleteQyAdminApi0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in DeleteQyAdminApiRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiDeleteQyAdminApi)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.DeleteQyAdminApi(ctx, req.(*DeleteQyAdminApiRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*DeleteQyAdminApiReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminApi_DeleteQyAdminApis0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in DeleteQyAdminApisRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiDeleteQyAdminApis)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.DeleteQyAdminApis(ctx, req.(*DeleteQyAdminApisRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*DeleteQyAdminApisReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminApi_GetQyAdminApi0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in GetQyAdminApiRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiGetQyAdminApi)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GetQyAdminApi(ctx, req.(*GetQyAdminApiRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*GetQyAdminApiReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminApi_ListQyAdminApi0_HTTP_Handler(srv QyAdminApiHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in ListQyAdminApiRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminApiListQyAdminApi)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.ListQyAdminApi(ctx, req.(*ListQyAdminApiRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*ListQyAdminApiReply)
		return ctx.Result(200, reply)
	}
}

type QyAdminApiHTTPClient interface {
	CreateQyAdminApi(ctx context.Context, req *CreateQyAdminApiRequest, opts ...http.CallOption) (rsp *CreateQyAdminApiReply, err error)
	DeleteQyAdminApi(ctx context.Context, req *DeleteQyAdminApiRequest, opts ...http.CallOption) (rsp *DeleteQyAdminApiReply, err error)
	DeleteQyAdminApis(ctx context.Context, req *DeleteQyAdminApisRequest, opts ...http.CallOption) (rsp *DeleteQyAdminApisReply, err error)
	GetQyAdminApi(ctx context.Context, req *GetQyAdminApiRequest, opts ...http.CallOption) (rsp *GetQyAdminApiReply, err error)
	ListQyAdminApi(ctx context.Context, req *ListQyAdminApiRequest, opts ...http.CallOption) (rsp *ListQyAdminApiReply, err error)
	UpdateQyAdminApi(ctx context.Context, req *UpdateQyAdminApiRequest, opts ...http.CallOption) (rsp *UpdateQyAdminApiReply, err error)
}

type QyAdminApiHTTPClientImpl struct {
	cc *http.Client
}

func NewQyAdminApiHTTPClient(client *http.Client) QyAdminApiHTTPClient {
	return &QyAdminApiHTTPClientImpl{client}
}

func (c *QyAdminApiHTTPClientImpl) CreateQyAdminApi(ctx context.Context, in *CreateQyAdminApiRequest, opts ...http.CallOption) (*CreateQyAdminApiReply, error) {
	var out CreateQyAdminApiReply
	pattern := "/api/admin/v1/sysapi"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationQyAdminApiCreateQyAdminApi))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminApiHTTPClientImpl) DeleteQyAdminApi(ctx context.Context, in *DeleteQyAdminApiRequest, opts ...http.CallOption) (*DeleteQyAdminApiReply, error) {
	var out DeleteQyAdminApiReply
	pattern := "/api/admin/v1/sysapi/{uid}"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminApiDeleteQyAdminApi))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "DELETE", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminApiHTTPClientImpl) DeleteQyAdminApis(ctx context.Context, in *DeleteQyAdminApisRequest, opts ...http.CallOption) (*DeleteQyAdminApisReply, error) {
	var out DeleteQyAdminApisReply
	pattern := "/api/admin/v1/sysapi"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminApiDeleteQyAdminApis))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "DELETE", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminApiHTTPClientImpl) GetQyAdminApi(ctx context.Context, in *GetQyAdminApiRequest, opts ...http.CallOption) (*GetQyAdminApiReply, error) {
	var out GetQyAdminApiReply
	pattern := "/api/admin/v1/sysapi/{uid}"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminApiGetQyAdminApi))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "GET", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminApiHTTPClientImpl) ListQyAdminApi(ctx context.Context, in *ListQyAdminApiRequest, opts ...http.CallOption) (*ListQyAdminApiReply, error) {
	var out ListQyAdminApiReply
	pattern := "/api/admin/v1/sysapi"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminApiListQyAdminApi))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "GET", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminApiHTTPClientImpl) UpdateQyAdminApi(ctx context.Context, in *UpdateQyAdminApiRequest, opts ...http.CallOption) (*UpdateQyAdminApiReply, error) {
	var out UpdateQyAdminApiReply
	pattern := "/api/admin/v1/sysapi/{uid}"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationQyAdminApiUpdateQyAdminApi))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "PUT", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}
