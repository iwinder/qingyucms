// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// - protoc-gen-go-http v2.4.1
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_home.proto

package v1

import (
	context "context"
	http "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(context.Context)
var _ = binding.EncodeURL

const _ = http.SupportPackageIsVersion1

const OperationQyAdminHomeEmailToNotSendCountJobsQyAdminHome = "/api.qycms_bff.admin.v1.QyAdminHome/EmailToNotSendCountJobsQyAdminHome"
const OperationQyAdminHomeGeneratorMapJobQyAdminHome = "/api.qycms_bff.admin.v1.QyAdminHome/GeneratorMapJobQyAdminHome"
const OperationQyAdminHomeUpdateAllPostsCountJobsQyAdminHome = "/api.qycms_bff.admin.v1.QyAdminHome/UpdateAllPostsCountJobsQyAdminHome"
const OperationQyAdminHomeUpdateContentCountJobsQyAdminHome = "/api.qycms_bff.admin.v1.QyAdminHome/UpdateContentCountJobsQyAdminHome"

type QyAdminHomeHTTPServer interface {
	EmailToNotSendCountJobsQyAdminHome(context.Context, *CreateQyAdminHomeRequest) (*CreateQyAdminHomeReply, error)
	GeneratorMapJobQyAdminHome(context.Context, *CreateQyAdminHomeRequest) (*CreateQyAdminHomeReply, error)
	UpdateAllPostsCountJobsQyAdminHome(context.Context, *CreateQyAdminHomeRequest) (*CreateQyAdminHomeReply, error)
	UpdateContentCountJobsQyAdminHome(context.Context, *CreateQyAdminHomeRequest) (*CreateQyAdminHomeReply, error)
}

func RegisterQyAdminHomeHTTPServer(s *http.Server, srv QyAdminHomeHTTPServer) {
	r := s.Route("/")
	r.POST("/api/admin/v1/jobs/updateContentCount", _QyAdminHome_UpdateContentCountJobsQyAdminHome0_HTTP_Handler(srv))
	r.POST("/api/admin/v1/jobs/generatorMap", _QyAdminHome_GeneratorMapJobQyAdminHome0_HTTP_Handler(srv))
	r.POST("/api/admin/v1/jobs/updateAllPostsCount", _QyAdminHome_UpdateAllPostsCountJobsQyAdminHome0_HTTP_Handler(srv))
	r.POST("/api/admin/v1/jobs/emailToNotSend", _QyAdminHome_EmailToNotSendCountJobsQyAdminHome0_HTTP_Handler(srv))
}

func _QyAdminHome_UpdateContentCountJobsQyAdminHome0_HTTP_Handler(srv QyAdminHomeHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateQyAdminHomeRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminHomeUpdateContentCountJobsQyAdminHome)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.UpdateContentCountJobsQyAdminHome(ctx, req.(*CreateQyAdminHomeRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateQyAdminHomeReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminHome_GeneratorMapJobQyAdminHome0_HTTP_Handler(srv QyAdminHomeHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateQyAdminHomeRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminHomeGeneratorMapJobQyAdminHome)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GeneratorMapJobQyAdminHome(ctx, req.(*CreateQyAdminHomeRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateQyAdminHomeReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminHome_UpdateAllPostsCountJobsQyAdminHome0_HTTP_Handler(srv QyAdminHomeHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateQyAdminHomeRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminHomeUpdateAllPostsCountJobsQyAdminHome)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.UpdateAllPostsCountJobsQyAdminHome(ctx, req.(*CreateQyAdminHomeRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateQyAdminHomeReply)
		return ctx.Result(200, reply)
	}
}

func _QyAdminHome_EmailToNotSendCountJobsQyAdminHome0_HTTP_Handler(srv QyAdminHomeHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateQyAdminHomeRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationQyAdminHomeEmailToNotSendCountJobsQyAdminHome)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.EmailToNotSendCountJobsQyAdminHome(ctx, req.(*CreateQyAdminHomeRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateQyAdminHomeReply)
		return ctx.Result(200, reply)
	}
}

type QyAdminHomeHTTPClient interface {
	EmailToNotSendCountJobsQyAdminHome(ctx context.Context, req *CreateQyAdminHomeRequest, opts ...http.CallOption) (rsp *CreateQyAdminHomeReply, err error)
	GeneratorMapJobQyAdminHome(ctx context.Context, req *CreateQyAdminHomeRequest, opts ...http.CallOption) (rsp *CreateQyAdminHomeReply, err error)
	UpdateAllPostsCountJobsQyAdminHome(ctx context.Context, req *CreateQyAdminHomeRequest, opts ...http.CallOption) (rsp *CreateQyAdminHomeReply, err error)
	UpdateContentCountJobsQyAdminHome(ctx context.Context, req *CreateQyAdminHomeRequest, opts ...http.CallOption) (rsp *CreateQyAdminHomeReply, err error)
}

type QyAdminHomeHTTPClientImpl struct {
	cc *http.Client
}

func NewQyAdminHomeHTTPClient(client *http.Client) QyAdminHomeHTTPClient {
	return &QyAdminHomeHTTPClientImpl{client}
}

func (c *QyAdminHomeHTTPClientImpl) EmailToNotSendCountJobsQyAdminHome(ctx context.Context, in *CreateQyAdminHomeRequest, opts ...http.CallOption) (*CreateQyAdminHomeReply, error) {
	var out CreateQyAdminHomeReply
	pattern := "/api/admin/v1/jobs/emailToNotSend"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminHomeEmailToNotSendCountJobsQyAdminHome))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminHomeHTTPClientImpl) GeneratorMapJobQyAdminHome(ctx context.Context, in *CreateQyAdminHomeRequest, opts ...http.CallOption) (*CreateQyAdminHomeReply, error) {
	var out CreateQyAdminHomeReply
	pattern := "/api/admin/v1/jobs/generatorMap"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminHomeGeneratorMapJobQyAdminHome))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminHomeHTTPClientImpl) UpdateAllPostsCountJobsQyAdminHome(ctx context.Context, in *CreateQyAdminHomeRequest, opts ...http.CallOption) (*CreateQyAdminHomeReply, error) {
	var out CreateQyAdminHomeReply
	pattern := "/api/admin/v1/jobs/updateAllPostsCount"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminHomeUpdateAllPostsCountJobsQyAdminHome))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *QyAdminHomeHTTPClientImpl) UpdateContentCountJobsQyAdminHome(ctx context.Context, in *CreateQyAdminHomeRequest, opts ...http.CallOption) (*CreateQyAdminHomeReply, error) {
	var out CreateQyAdminHomeReply
	pattern := "/api/admin/v1/jobs/updateContentCount"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationQyAdminHomeUpdateContentCountJobsQyAdminHome))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}
